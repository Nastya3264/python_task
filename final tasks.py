# Задача 1
# Напишите программу, которая считывает с консоли числа (по одному в строке) до тех пор,
# пока сумма введённых чисел не будет равна 0 и сразу после этого выводит сумму квадратов всех считанных чисел.
# Гарантируется, что в какой-то момент сумма введённых чисел окажется равной 0,
# после этого считывание продолжать не нужно.
# В примере считываем числа 1, -3, 5, -6, -10, 13; в этот момент замечаем, что сумма этих чисел равна нулю
# и выводим сумму их квадратов, не обращая внимания на то, что остались ещё не прочитанные значения.

total = int(input())
total_square = total ** 2

while total != 0:
    x = int(input())
    total += x
    total_square += x ** 2
print(total_square)

# Задача 2
# Напишите программу, которая выводит часть последовательности 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 ...
# (число повторяется столько раз, чему равно).
# На вход программе передаётся неотрицательное целое число n
# столько элементов последовательности должна отобразить программа.
# На выходе ожидается последовательность чисел, записанных через пробел в одну строку

n = int(input())
a = []
for i in range(1, n + 1):
    if len(a) <= n:
        a += [i] * i
    else:
        break
print(*a[:n])

# Задача 3
# Напишите программу, которая считывает список чисел lst из первой строки и число x из второй строки,
# которая выводит все позиции, на которых встречается число x в переданном списке lst.
# Позиции нумеруются с нуля, если число x не встречается в списке, вывести строку "Отсутствует"
# (без кавычек, с большой буквы). Позиции должны быть выведены в одну строку, по возрастанию абсолютного значения

# (1 способ)
lst = input().split()
x = input()
a = []

for i in range(len(lst)):
    if lst[i] == x:
        a.append(i)

if len(a) == 0:
    print('Отсутствует')
else:
    print(*a)

# (2 способ)
lst, x = input().split(), input()
if x in lst:
    for i in range(len(lst)):
        if lst[i] == x:
            print(i, end=' ')
else:
    print('Отсутствует')

# Задача 4
# Напишите программу, на вход которой подаётся прямоугольная матрица в виде последовательности строк.
# После последней строки матрицы идёт строка, содержащая только строку "end" (без кавычек, см. Sample Input).
# Программа должна вывести матрицу того же размера, у которой каждый элемент в позиции i, j равен сумме элементов
# первой матрицы на позициях (i-1, j), (i+1, j), (i, j-1), (i, j+1). У крайних символов соседний элемент находится
# с противоположной стороны матрицы.
# В случае одной строки/столбца элемент сам себе является соседом по соответствующему направлению.

# (решение 1)

matr = []

x = input()

while x != 'end':
    x = x.split()
    x = [int(i) for i in x]
    matr.append(x)
    x = input()

new_matr =  [[0 for j in range(len(matr[i]))] for i in range(len(matr))]

for i in range(len(matr)):
    for j in range(len(matr[i])):
        new_matr[i][j] = matr[i-1][j] + matr[(i+1) % len(matr)][j] + matr[i][j-1] + matr[i][(j+1) % len(matr[i])]

for i in new_matr:
    print(*i)

# (решение 2)

matr = []

x = input()

while x != 'end':
    x = x.split()
    x = [int(i) for i in x]
    matr.append(x)
    x = input()

new_matr = []
for i in range(len(matr)):
    new_matr_row = []
    for j in range(len(matr[i])):
        new_matr_row.append(
            matr[i - 1][j] + matr[(i + 1) % len(matr)][j] + matr[i][j - 1] + matr[i][(j + 1) % len(matr[i])])
    new_matr.append(new_matr_row)

for i in new_matr:
    print(*i)

# (решение 3)

matr = [[int(i) for i in input().split()]]
x = input()
while x != 'end' :
    matr.append([int(i) for i in x.split()])
    x = input()
for i in range(len(matr)):
    for j in range(len(matr[i])):
        print((matr[i-1][j] + matr[(i+1) % len(matr)][j] + matr[i][j-1] + matr[i][(j+1) % len(matr[i])]), end=' ')
    print()